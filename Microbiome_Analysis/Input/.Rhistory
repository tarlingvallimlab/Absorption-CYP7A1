library(tidyverse)
library(vegan)
library(ggplot2)
library(cowplot)
library(nlme)
library(ggpubr)
library(Maaslin2)
version(tidyverse)
R.version
packageVersion(tidyverse)
## This script takes in the absolute abundance table from MetaPhlAn and runs alpha and beta diversity analyses ##
# R version 4.2.1 (2022-06-23)
# load libraries and set working directory
library(tidyverse)
packageVersion(tidyverse)
packageVersion("tidyverse")
packageVersion("vegan")
packageVersion("ggplot2")
packageVersion("cowplot")
packageVersion("nlme")
packageVersion("ggpubr")
packageVersion("Maaslin2")
# set working directory and load packages
setwd("/Volumes/tarling-vallim/Alvin/Absorption Paper/Github Repository/Enhanced Volcano")
library("EnhancedVolcano") #v1.16.0
library('RColorBrewer') #v1.1.3
library(ggplot2) #v3.5.0
# read differentially expressed genes file
DEgenes <- read.csv("ETV230_DEGS.csv", header = TRUE)
# otherwise, to plot the significantlly up/down volcano plot, use this:
keyvals <- ifelse(DEgenes$log2FoldChange < -1.5 & DEgenes$padj < 0.05, 'blue',
ifelse(DEgenes$log2FoldChange > 1.5 & DEgenes$padj < 0.05,'red', 'grey'))
keyvals[is.na(keyvals)] <- 'grey'
# names(keyvals)[keyvals == 'black'] <- 'select genes'
names(keyvals)[keyvals == 'blue'] <- 'Downregulated genes Log2FC < -1.5'
names(keyvals)[keyvals == 'red'] <- 'Upregulated genes Log2FC > 1.5'
# counting number of genes changed
sum(DEgenes$log2FoldChange < -1.5 & DEgenes$padj < 0.05) #significantly downregulated genes (11)
sum(DEgenes$log2FoldChange > 1.5 & DEgenes$padj < 0.05) #significantly upregulated genes (18)
# create volcano plot
ETV230DEGVolcano <- EnhancedVolcano::EnhancedVolcano(DEgenes,
lab=DEgenes$Associated.Gene.Name, selectLab=FALSE,
labSize = 2,
xlim = c(-3,3),
ylim = c(0,25),
pointSize = 1,
labFace = "bold",
title = 'Cyp7a1 CRISPR vs Control CRISPR',
x='log2FoldChange',
y='padj',
pCutoff=0.05,
FCcutoff = 1.5,
colAlpha = 1,
colCustom = keyvals,
legendPosition = 'right',
legendLabSize = 7,
legendIconSize = 2.0,
axisLabSize = 8,
gridlines.minor = FALSE,
drawConnectors = TRUE,
widthConnectors = 1,
boxedLabels = TRUE,
max.overlaps = Inf
)
ETV230DEGVolcano
# R version 4.2.1 (2022-06-23)
# load libraries and set working directory
library(tidyverse) #v2.0.0
library(vegan) #v2.6.4
library(ggplot2) #v3.5.0
library(cowplot) #v1.1.3
library(ggpubr) #v0.6.0
library(Maaslin2) #v1.12.0
options(scipen=999)
# load input files
input_bug_df = read.table("merged_metaphlan_filtered_absolute_abundance.txt", header = TRUE)
setwd("/Volumes/tarling-vallim/Alvin/Absorption Paper/Github Repository/Microbiome/")
# load input files
input_bug_df = read.table("merged_metaphlan_filtered_absolute_abundance.txt", header = TRUE)
input_bug_df <- input_bug_df[,-2] #remove cladetax_id column
metadata = read_tsv("Metadata.tsv")
# transform data for phylum diversity stacked plots to be graphed in PRISM
input_bug_df_phylum <- filter(input_bug_df,!grepl("c__", clade_name)) #only show phylum
input_bug_df_phylum <- filter(input_bug_df_phylum,grepl("p__", clade_name)) #only show phylum
input_bug_df_phylum <- input_bug_df_phylum[,-2] # remove clade_taxid column
input_bug_df_phylum <- rename_at(input_bug_df_phylum, vars(matches("ETV")), ~stringr::str_extract(., "(ETV364)_\\d+")) #clean up column names
input_bug_df_phylum <- as.data.frame(input_bug_df_phylum)
input_bug_df_phylum <- t(input_bug_df_phylum)
colnames(input_bug_df_phylum) <- input_bug_df_phylum[1,]
input_bug_df_phylum <- input_bug_df_phylum[-1,]
input_bug_df_phylum <- as.data.frame(input_bug_df_phylum)
input_bug_df_phylum[,] <- lapply(input_bug_df_phylum[,], as.numeric) #make dataframe numeric
input_bug_df_phylum_groups <- merge(input_bug_df_phylum, metadata_merge, by = 0)
input_bug_df_phylum_groups <- input_bug_df_phylum_groups[,-c((ncol(input_bug_df_phylum_groups)-2),(ncol(input_bug_df_phylum_groups)-1))] # remove second to last and third to last columns
setwd("/Volumes/tarling-vallim/Alvin/Absorption Paper/Github Repository/Microbiome/")
# load input files
input_bug_df = read.table("merged_metaphlan_filtered_absolute_abundance.txt", header = TRUE)
input_bug_df <- input_bug_df[,-2] #remove cladetax_id column
metadata = read_tsv("Metadata.tsv")
# transform data for phylum diversity stacked plots to be graphed in PRISM
input_bug_df_phylum <- filter(input_bug_df,!grepl("c__", clade_name)) #only show phylum
input_bug_df_phylum <- filter(input_bug_df_phylum,grepl("p__", clade_name)) #only show phylum
input_bug_df_phylum <- input_bug_df_phylum[,-2] # remove clade_taxid column
input_bug_df_phylum <- rename_at(input_bug_df_phylum, vars(matches("ETV")), ~stringr::str_extract(., "(ETV364)_\\d+")) #clean up column names
input_bug_df_phylum <- as.data.frame(input_bug_df_phylum)
input_bug_df_phylum <- t(input_bug_df_phylum)
colnames(input_bug_df_phylum) <- input_bug_df_phylum[1,]
input_bug_df_phylum <- input_bug_df_phylum[-1,]
input_bug_df_phylum <- as.data.frame(input_bug_df_phylum)
input_bug_df_phylum[,] <- lapply(input_bug_df_phylum[,], as.numeric) #make dataframe numeric
View(input_bug_df)
input_bug_df_phylum_groups <- merge(input_bug_df_phylum, metadata, by = 0)
input_bug_df_phylum_groups <- input_bug_df_phylum_groups[,-c((ncol(input_bug_df_phylum_groups)-2),(ncol(input_bug_df_phylum_groups)-1))] # remove second to last and third to last columns
rownames(input_bug_df_phylum_groups) <- input_bug_df_phylum_groups[,1]
input_bug_df_phylum_groups <- input_bug_df_phylum_groups[,-1]
View(input_bug_df_phylum_groups)
# transform data for phylum diversity stacked plots to be graphed in PRISM
input_bug_df_phylum <- filter(input_bug_df,!grepl("c__", clade_name)) #only show phylum
input_bug_df_phylum <- filter(input_bug_df_phylum,grepl("p__", clade_name)) #only show phylum
input_bug_df_phylum <- input_bug_df_phylum[,-2] # remove clade_taxid column
input_bug_df_phylum <- rename_at(input_bug_df_phylum, vars(matches("ETV")), ~stringr::str_extract(., "(ETV364)_\\d+")) #clean up column names
input_bug_df_phylum <- as.data.frame(input_bug_df_phylum)
input_bug_df_phylum <- t(input_bug_df_phylum)
colnames(input_bug_df_phylum) <- input_bug_df_phylum[1,]
input_bug_df_phylum <- input_bug_df_phylum[-1,]
input_bug_df_phylum <- as.data.frame(input_bug_df_phylum)
input_bug_df_phylum[,] <- lapply(input_bug_df_phylum[,], as.numeric) #make dataframe numeric
input_bug_df_phylum_groups <- input_bug_df_phylum_groups[,-c((ncol(input_bug_df_phylum_groups)-2),(ncol(input_bug_df_phylum_groups)-1))] # remove second to last and third to last columns
rownames(input_bug_df_phylum_groups) <- input_bug_df_phylum_groups[,1]
input_bug_df_phylum_groups <- input_bug_df_phylum_groups[,-1]
View(input_bug_df_phylum_groups)
# transform data for phylum diversity stacked plots to be graphed in PRISM
input_bug_df_phylum <- filter(input_bug_df,!grepl("c__", clade_name)) #only show phylum
input_bug_df_phylum <- filter(input_bug_df_phylum,grepl("p__", clade_name)) #only show phylum
input_bug_df_phylum <- input_bug_df_phylum[,-2] # remove clade_taxid column
input_bug_df_phylum <- rename_at(input_bug_df_phylum, vars(matches("ETV")), ~stringr::str_extract(., "(ETV364)_\\d+")) #clean up column names
input_bug_df_phylum <- as.data.frame(input_bug_df_phylum)
input_bug_df_phylum <- t(input_bug_df_phylum)
colnames(input_bug_df_phylum) <- input_bug_df_phylum[1,]
input_bug_df_phylum <- input_bug_df_phylum[-1,]
input_bug_df_phylum <- as.data.frame(input_bug_df_phylum)
input_bug_df_phylum[,] <- lapply(input_bug_df_phylum[,], as.numeric) #make dataframe numeric
View(input_bug_df_phylum)
# load input files
input_bug_df = read.table("merged_metaphlan_filtered_absolute_abundance.txt", header = TRUE)
input_bug_df <- input_bug_df[,-2] #remove cladetax_id column
metadata = read_tsv("Metadata.tsv")
# transform data for phylum diversity stacked plots to be graphed in PRISM
input_bug_df_phylum <- filter(input_bug_df,!grepl("c__", clade_name)) #only show phylum
input_bug_df_phylum <- filter(input_bug_df_phylum,grepl("p__", clade_name)) #only show phylum
input_bug_df_phylum <- input_bug_df_phylum[,-2] # remove clade_taxid column
input_bug_df_phylum <- rename_at(input_bug_df_phylum, vars(matches("ETV")), ~stringr::str_extract(., "(ETV364)_\\d+")) #clean up column names
input_bug_df_phylum <- as.data.frame(input_bug_df_phylum)
input_bug_df_phylum <- t(input_bug_df_phylum)
colnames(input_bug_df_phylum) <- input_bug_df_phylum[1,]
input_bug_df_phylum <- input_bug_df_phylum[-1,]
input_bug_df_phylum <- as.data.frame(input_bug_df_phylum)
input_bug_df_phylum[,] <- lapply(input_bug_df_phylum[,], as.numeric) #make dataframe numeric
metadata_merge <- metadata %>% remove_rownames %>% column_to_rownames(var="#SampleID")
input_bug_df_phylum_groups <- merge(input_bug_df_phylum, metadata_merge, by = 0)
input_bug_df_phylum_groups <- input_bug_df_phylum_groups[,-c((ncol(input_bug_df_phylum_groups)-2),(ncol(input_bug_df_phylum_groups)-1))] # remove second to last and third to last columns
rownames(input_bug_df_phylum_groups) <- input_bug_df_phylum_groups[,1]
input_bug_df_phylum_groups <- input_bug_df_phylum_groups[,-1]
View(input_bug_df_phylum_groups)
input_bug_df_phylum_groups <- merge(input_bug_df_phylum, metadata_merge, by = 0) # labels which sample belongs to which groups
View(input_bug_df_phylum_groups)
# transform data for alpha and beta diversity by species
input_bug_df <- filter(input_bug_df,grepl("s__", clade_name)) # only show species
input_bug_df <- filter(input_bug_df,!grepl("t__", clade_name)) # only show species
bug_df <- as.data.frame(input_bug_df)
bug_df <- rename_at(bug_df, vars(matches("ETV")), ~stringr::str_extract(., "(ETV364)_\\d+")) #clean up column names
View(bug_df)
### ALPHA DIVERSITY ###
bug_df_alpha <- bug_df[,-1] #remove species names
bug_df_alpha[,] <- lapply(bug_df_alpha[,], as.numeric) #make dataframe numeric
# shannon index
shannon <- diversity(t(bug_df_alpha), index = "shannon")
shannon <- as.data.frame(shannon)
shannon <- rownames_to_column(shannon)
colnames(shannon) <- c("#SampleID", "shannon")
# simpson index
simpson <- diversity(t(bug_df_alpha), index = "simpson")
simpson <- as.data.frame(simpson)
simpson <- rownames_to_column(simpson)
colnames(simpson) <- c("#SampleID", "simpson")
# inverted simpson index
invsimpson <- diversity(t(bug_df_alpha), index = "invsimpson")
invsimpson <- as.data.frame(invsimpson)
invsimpson <- rownames_to_column(invsimpson)
colnames(invsimpson) <- c("#SampleID", "invsimpson")
# observed species (species richness)
observedspec <- specnumber(t(bug_df_alpha))
observedspec <- as.data.frame(observedspec)
observedspec <- rownames_to_column(observedspec)
colnames(observedspec) <- c("#SampleID", "observed_species")
# merge all diversity indices to metadata file
meta_diversity <- merge(metadata, shannon, by = "#SampleID")
meta_diversity <- merge(meta_diversity, simpson, by = "#SampleID")
meta_diversity <- merge(meta_diversity, invsimpson, by = "#SampleID")
meta_diversity <- merge(meta_diversity, observedspec, by = "#SampleID")
View(meta_diversity)
# Format species abundance data
bug_mat = bug_df |>
column_to_rownames("clade_name") |>
as.matrix() |>
t()
mode(bug_mat) = "numeric" #change from string to numeric values
dist_mat = vegdist(bug_mat, method = "bray")
# Bray-Curtis Dissimilarity
cmd_res = cmdscale(dist_mat,
k = (nrow(bug_mat) - 1),
eig = TRUE)
str(cmd_res)
pcoa_df = tibble(PC1 = cmd_res$points[,1],
PC2 = cmd_res$points[,2])
# PERMANOVA test
set.seed(10)
permanovastats <- adonis2(dist_mat ~ Group, data = metadata, permutations = 1000)
View(permanovastats)
# Plotting the samples
p = ggplot(pcoa_df, aes(x = PC1, y = PC2)) +
geom_point()
pcoa_meta = bind_cols(pcoa_df, metadata)
p_diag = ggplot(pcoa_meta,
aes(x = PC1, y = PC2, color = Group)) +
geom_point() #+ #show dots
p = p_diag + theme_light()
p = p + scale_color_manual(values = c("Control CRISPR" = "#808080","Cyp7a1 CRISPR" = "#0080FF"))
p_final = p + labs(color = "Group",
title = "Principal coordinates by group")
p_final
### DIFFERENTIAL TAXA ###
diff_taxa_df <- as.data.frame(bug_df)
diff_taxa_df <- t(diff_taxa_df)
colnames(diff_taxa_df) <- diff_taxa_df[1,]
diff_taxa_df <- diff_taxa_df[-1,]
diff_taxa_df <- as.data.frame(diff_taxa_df)
diff_taxa_df[,] <- lapply(diff_taxa_df[,], as.numeric) #make dataframe numeric
# add groups column to end of dataframe to sort groups
metadata_merge <- metadata %>% remove_rownames %>% column_to_rownames(var="#SampleID")
diff_taxa_df_groups <- merge(diff_taxa_df, metadata_merge, by = 0)
diff_taxa_df_groups <- diff_taxa_df_groups[,-c((ncol(diff_taxa_df_groups)-2),(ncol(diff_taxa_df_groups)-1))] # remove second to last and third to last columns
rownames(diff_taxa_df_groups) <- diff_taxa_df_groups[,1]
diff_taxa_df_groups <- diff_taxa_df_groups[,-1]
View(diff_taxa_df_groups)
# Control vs Cyp7a1 Differential species
diff_taxa_df_groups_Cyp7a1 <- filter(diff_taxa_df_groups,grepl("Control CRISPR|Cyp7a1 CRISPR", Group))
diff_taxa_df_groups_Cyp7a1 <- diff_taxa_df_groups_Cyp7a1[,-ncol(diff_taxa_df_groups_Cyp7a1)] # remove groups column
diff_taxa_metadata_Cyp7a1 <- filter(metadata_merge, grepl("Control CRISPR|Cyp7a1 CRISPR", Group))
R.version
# R version 4.2.1 (2022-06-23)
# set working directory and load packages
library(tidyverse) #v2.0.0
library(vegan) #v2.6.4
library(ggplot2) #v3.5.0
library(cowplot) #v1.1.3
library(ggpubr) #v0.6.0
library(Maaslin2) #v1.12.0
options(scipen=999)
setwd("/Volumes/tarling-vallim/Alvin/Absorption Paper/Github Repository/Microbiome Analysis/Input")
setwd("/Volumes/tarling-vallim/Alvin/Absorption Paper/Github Repository/Microbiome Analysis/Input")
setwd("/Volumes/tarling-vallim/Alvin/Absorption Paper/Github Repository/Microbiome_Analysis/Input")
# load input files
input_bug_df = read.table("merged_metaphlan_filtered_absolute_abundance.txt", header = TRUE)
input_bug_df <- input_bug_df[,-2] #remove cladetax_id column
metadata = read_tsv("Metadata.tsv")
# transform data for phylum diversity stacked plots to be graphed in PRISM
input_bug_df_phylum <- filter(input_bug_df,!grepl("c__", clade_name)) # only show phylum
input_bug_df_phylum <- filter(input_bug_df_phylum,grepl("p__", clade_name)) # only show phylum
input_bug_df_phylum <- input_bug_df_phylum[,-2] # remove clade_taxid column
input_bug_df_phylum <- rename_at(input_bug_df_phylum, vars(matches("ETV")), ~stringr::str_extract(., "(ETV364)_\\d+")) #clean up column names
input_bug_df_phylum <- as.data.frame(input_bug_df_phylum)
input_bug_df_phylum <- t(input_bug_df_phylum)
colnames(input_bug_df_phylum) <- input_bug_df_phylum[1,]
input_bug_df_phylum <- input_bug_df_phylum[-1,]
input_bug_df_phylum <- as.data.frame(input_bug_df_phylum)
input_bug_df_phylum[,] <- lapply(input_bug_df_phylum[,], as.numeric) # make dataframe numeric
metadata_merge <- metadata %>% remove_rownames %>% column_to_rownames(var="#SampleID")
input_bug_df_phylum_groups <- merge(input_bug_df_phylum, metadata_merge, by = 0) # labels which sample belongs to which groups
input_bug_df_phylum_groups <- input_bug_df_phylum_groups[,-c((ncol(input_bug_df_phylum_groups)-2),(ncol(input_bug_df_phylum_groups)-1))] # remove second to last and third to last columns
rownames(input_bug_df_phylum_groups) <- input_bug_df_phylum_groups[,1]
input_bug_df_phylum_groups <- input_bug_df_phylum_groups[,-1]
write.csv(input_bug_df_phylum_groups, "ETV364_phylum_metaphlan_filtered_absolute_abundance.csv")
# transform data for alpha and beta diversity by species
input_bug_df <- filter(input_bug_df,grepl("s__", clade_name)) # only show species
input_bug_df <- filter(input_bug_df,!grepl("t__", clade_name)) # only show species
bug_df <- as.data.frame(input_bug_df)
bug_df <- rename_at(bug_df, vars(matches("ETV")), ~stringr::str_extract(., "(ETV364)_\\d+")) #clean up column names
write.csv(bug_df, "ETV364_species_metaphlan_filtered_absolute_abundance.tsv")
### ALPHA DIVERSITY ###
bug_df_alpha <- bug_df[,-1] #remove species names
bug_df_alpha[,] <- lapply(bug_df_alpha[,], as.numeric) #make dataframe numeric
# shannon index
shannon <- diversity(t(bug_df_alpha), index = "shannon")
shannon <- as.data.frame(shannon)
shannon <- rownames_to_column(shannon)
colnames(shannon) <- c("#SampleID", "shannon")
# simpson index
simpson <- diversity(t(bug_df_alpha), index = "simpson")
simpson <- as.data.frame(simpson)
simpson <- rownames_to_column(simpson)
colnames(simpson) <- c("#SampleID", "simpson")
# inverted simpson index
invsimpson <- diversity(t(bug_df_alpha), index = "invsimpson")
invsimpson <- as.data.frame(invsimpson)
invsimpson <- rownames_to_column(invsimpson)
colnames(invsimpson) <- c("#SampleID", "invsimpson")
# observed species (species richness)
observedspec <- specnumber(t(bug_df_alpha))
observedspec <- as.data.frame(observedspec)
observedspec <- rownames_to_column(observedspec)
colnames(observedspec) <- c("#SampleID", "observed_species")
# merge all diversity indices to metadata file - to be graphed in PRISM
meta_diversity <- merge(metadata, shannon, by = "#SampleID")
meta_diversity <- merge(meta_diversity, simpson, by = "#SampleID")
meta_diversity <- merge(meta_diversity, invsimpson, by = "#SampleID")
meta_diversity <- merge(meta_diversity, observedspec, by = "#SampleID")
write.csv(meta_diversity, "ETV364_filtered_alpha_diversity.csv")
# Format species abundance data
bug_mat = bug_df |>
column_to_rownames("clade_name") |>
as.matrix() |>
t()
mode(bug_mat) = "numeric" #change from string to numeric values
dist_mat = vegdist(bug_mat, method = "bray")
# Bray-Curtis Dissimilarity
cmd_res = cmdscale(dist_mat,
k = (nrow(bug_mat) - 1),
eig = TRUE)
str(cmd_res)
pcoa_df = tibble(PC1 = cmd_res$points[,1],
PC2 = cmd_res$points[,2])
# PERMANOVA test
set.seed(10)
permanovastats <- adonis2(dist_mat ~ Group, data = metadata, permutations = 1000)
write.csv(permanovastats, "ETV364_filtered_permanovatest_stats_Cyp7a1.csv")
# Graphing the PCoA plot
p = ggplot(pcoa_df, aes(x = PC1, y = PC2)) +
geom_point()
pcoa_meta = bind_cols(pcoa_df, metadata)
p_diag = ggplot(pcoa_meta,
aes(x = PC1, y = PC2, color = Group)) +
geom_point() #+ #show dots
p = p_diag + theme_light()
p = p + scale_color_manual(values = c("Control CRISPR" = "#808080","Cyp7a1 CRISPR" = "#0080FF"))
p_final = p + labs(color = "Group",
title = "Principal coordinates by group")
p_final
ggsave(filename = "ETV364_pcoa_plot.png",
plot = p_final,
width = 5,
height = 4)
### DIFFERENTIAL TAXA ###
diff_taxa_df <- as.data.frame(bug_df)
diff_taxa_df <- t(diff_taxa_df)
colnames(diff_taxa_df) <- diff_taxa_df[1,]
diff_taxa_df <- diff_taxa_df[-1,]
diff_taxa_df <- as.data.frame(diff_taxa_df)
diff_taxa_df[,] <- lapply(diff_taxa_df[,], as.numeric) #make dataframe numeric
# add groups column to end of dataframe to sort groups
metadata_merge <- metadata %>% remove_rownames %>% column_to_rownames(var="#SampleID")
diff_taxa_df_groups <- merge(diff_taxa_df, metadata_merge, by = 0)
diff_taxa_df_groups <- diff_taxa_df_groups[,-c((ncol(diff_taxa_df_groups)-2),(ncol(diff_taxa_df_groups)-1))] # remove second to last and third to last columns
rownames(diff_taxa_df_groups) <- diff_taxa_df_groups[,1]
diff_taxa_df_groups <- diff_taxa_df_groups[,-1]
# Control vs Cyp7a1 Differential species
diff_taxa_df_groups_Cyp7a1 <- filter(diff_taxa_df_groups,grepl("Control CRISPR|Cyp7a1 CRISPR", Group))
diff_taxa_df_groups_Cyp7a1 <- diff_taxa_df_groups_Cyp7a1[,-ncol(diff_taxa_df_groups_Cyp7a1)] # remove groups column
diff_taxa_metadata_Cyp7a1 <- filter(metadata_merge, grepl("Control CRISPR|Cyp7a1 CRISPR", Group))
